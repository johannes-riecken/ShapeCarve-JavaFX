package org.example.shapecarvejavafx;

import javafx.application.Application;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.paint.Color;
import javafx.scene.paint.PhongMaterial;
import javafx.scene.shape.Box;
import javafx.stage.Stage;

import java.io.IOException;
import javafx.scene.shape.TriangleMesh;
import javafx.scene.shape.MeshView;

public class HelloApplication extends Application {
    @Override
    public void start(Stage stage) {
        var views = new int[][]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16755790, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14959671, 0, 16755790, 16755790, 7833856, 0, 0, 0, 14959671, 14959671, 14959671, 0, 0, 0, 0, 0, 14959671, 0, 16755790, 16755790, 7833856, 16690254, 0, 14959671, 14959671, 14959671, 14959671, 14959671, 0, 0, 0, 0, 14959671, 16755790, 16755790, 7833856, 7833856, 16690254, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 0, 0, 7833856, 14959671, 14959671, 7833856, 7833856, 16690254, 7833856, 16690254, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 7833856, 7833856, 14959671, 14959671, 16690254, 16690254, 16690254, 16690254, 16690254, 7833856, 7833856, 7833856, 16690254, 16690254, 16690254, 14959671, 7833856, 7833856, 14959671, 14959671, 16690254, 16690254, 16690254, 16690254, 16690254, 7833856, 7833856, 7833856, 16690254, 16690254, 16690254, 14959671, 7833856, 7833856, 14959671, 14959671, 7833856, 16690254, 7833856, 16690254, 16690254, 7833856, 7833856, 7833856, 16690254, 16690254, 16690254, 14959671, 7833856, 7833856, 14959671, 14959671, 7833856, 7833856, 7833856, 16690254, 16690254, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 0, 0, 0, 0, 14959671, 7833856, 16624718, 16624718, 7833856, 0, 0, 14959671, 14959671, 14959671, 14959671, 0, 0, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16755790, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14959671, 0, 16755790, 16755790, 7833856, 0, 0, 0, 14959671, 14959671, 14959671, 0, 0, 0, 0, 0, 14959671, 0, 16755790, 16755790, 7833856, 16690254, 0, 14959671, 14959671, 14959671, 14959671, 14959671, 0, 0, 0, 0, 14959671, 16755790, 16755790, 7833856, 7833856, 16690254, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 0, 0, 7833856, 14959671, 14959671, 7833856, 7833856, 16690254, 7833856, 16690254, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 7833856, 7833856, 14959671, 14959671, 16690254, 16690254, 16690254, 16690254, 16690254, 7833856, 7833856, 7833856, 16690254, 16690254, 16690254, 14959671, 7833856, 7833856, 14959671, 14959671, 16690254, 16690254, 16690254, 16690254, 16690254, 7833856, 7833856, 7833856, 16690254, 16690254, 16690254, 14959671, 7833856, 7833856, 14959671, 14959671, 7833856, 16690254, 7833856, 16690254, 16690254, 7833856, 7833856, 7833856, 16690254, 16690254, 16690254, 14959671, 7833856, 7833856, 14959671, 14959671, 7833856, 7833856, 7833856, 16690254, 16690254, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 0, 0, 0, 0, 14959671, 7833856, 16624718, 16624718, 7833856, 0, 0, 14959671, 14959671, 14959671, 14959671, 0, 0, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 0, 0, 0, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 16624718, 0, 0, 0, 0, 0, 0, 0, 0, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 7833856, 0, 0, 0, 0, 0, 0, 0, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 7833856, 0, 0, 0, 0, 0, 0, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 7833856, 0, 0, 0, 0, 0, 16755790, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 7833856, 0, 0, 0, 0, 0, 16755790, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 7833856, 0, 0, 0, 0, 0, 0, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 7833856, 0, 0, 0, 0, 0, 0, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 7833856, 0, 0, 0, 0, 0, 0, 0, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 7833856, 0, 0, 0, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 16624718, 0, 0, 0, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 0, 0, 0, 0, 0, 0, 0, 0, 14959671, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 16624718, 0, 0, 0, 0, 0, 0, 0, 14959671, 14959671, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 0, 0, 0, 0, 0, 0, 0, 14959671, 14959671, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 0, 0, 0, 0, 0, 0, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 7833856, 0, 0, 0, 0, 0, 16755790, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 7833856, 0, 0, 0, 0, 0, 16755790, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 7833856, 0, 0, 0, 0, 0, 0, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 7833856, 0, 0, 0, 0, 0, 0, 14959671, 14959671, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 0, 0, 0, 0, 0, 0, 14959671, 14959671, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 0, 0, 0, 0, 0, 0, 0, 0, 14959671, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 16624718, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 0, 0, 0, 0, 0, 0, 0, 0, 16690254, 7833856, 16690254, 16755790, 16755790, 16690254, 7833856, 16690254, 0, 0, 0, 0, 0, 0, 0, 16624718, 16690254, 7833856, 16690254, 16755790, 16755790, 16690254, 7833856, 16690254, 16624718, 0, 0, 0, 0, 0, 0, 16624718, 16690254, 16690254, 16690254, 16755790, 16755790, 16690254, 16690254, 16690254, 16624718, 0, 0, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16690254, 16690254, 16690254, 16690254, 16690254, 16690254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7833856, 7833856, 14959671, 7833856, 7833856, 14959671, 7833856, 7833856, 0, 0, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 14959671, 7833856, 7833856, 14959671, 7833856, 7833856, 7833856, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 7833856, 14959671, 14959671, 14959671, 14959671, 7833856, 7833856, 7833856, 7833856, 0, 0, 0, 0, 16690254, 16690254, 7833856, 14959671, 16690254, 14959671, 14959671, 16690254, 14959671, 7833856, 16690254, 16690254, 0, 0, 0, 0, 16690254, 16690254, 16690254, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 16690254, 16690254, 16690254, 0, 0, 0, 0, 16690254, 16690254, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 16690254, 16690254, 0, 0, 0, 0, 0, 0, 14959671, 14959671, 14959671, 0, 0, 14959671, 14959671, 14959671, 0, 0, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 0, 0, 0, 0, 7833856, 7833856, 7833856, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 7833856, 0, 0, 0, 0, 7833856, 7833856, 7833856, 7833856, 0, 0}, {0, 0, 0, 0, 0, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 0, 0, 0, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 0, 0, 0, 0, 0, 0, 0, 16624718, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 16624718, 0, 0, 0, 0, 0, 0, 16624718, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 16624718, 0, 0, 0, 0, 0, 0, 0, 16690254, 7833856, 7833856, 7833856, 7833856, 7833856, 7833856, 16690254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16690254, 16690254, 16690254, 16690254, 16690254, 16690254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7833856, 7833856, 14959671, 7833856, 7833856, 14959671, 7833856, 7833856, 0, 0, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 14959671, 7833856, 7833856, 14959671, 7833856, 7833856, 7833856, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 7833856, 14959671, 14959671, 14959671, 14959671, 7833856, 7833856, 7833856, 7833856, 0, 0, 0, 0, 16690254, 16690254, 7833856, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 7833856, 16690254, 16690254, 0, 0, 0, 0, 16690254, 16690254, 16690254, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 16690254, 16690254, 16690254, 0, 0, 0, 0, 16690254, 16690254, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 14959671, 16690254, 16690254, 0, 0, 0, 0, 0, 0, 14959671, 14959671, 14959671, 0, 0, 14959671, 14959671, 14959671, 0, 0, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 0, 0, 0, 0, 7833856, 7833856, 7833856, 0, 0, 0, 0, 0, 7833856, 7833856, 7833856, 7833856, 0, 0, 0, 0, 7833856, 7833856, 7833856, 7833856, 0, 0}};
        var o = ShapeCarver.carve(new int[]{16, 16, 16}, views, 0, new boolean[]{false, false, false, false, false, false});
        Greedy.Mesh mesh = Greedy.greedyMesh(o.volume(), o.dims());
        System.out.println(mesh);
        Group g = create3DContent(o);
//        Group g = new Group();
        Scene scene = new Scene(g, 160, 160);
        // add the mesh to the scene
//        g.getChildren().add(convertMeshToJavaFX(mesh));

        System.out.println(create3DContentAsFXML(o));
//        // scale group 10x
//        g.setScaleX(10);
//        g.setScaleY(10);
//        g.setScaleZ(10);
//        g.setTranslateX(80);
//        g.setTranslateY(80);
//        g.setTranslateZ(80);
//        scene.setRoot(g);
        stage.setTitle("Hello!");
        stage.setScene(scene);
        stage.show();
    }


    public MeshView convertMeshToJavaFX(Greedy.Mesh mesh) {
        TriangleMesh triangleMesh = new TriangleMesh();

        // Add vertices to the TriangleMesh
        for (var vertex : mesh.vertices()) {
            triangleMesh.getPoints().addAll(vertex.get(0), vertex.get(1), vertex.get(2));
        }

        triangleMesh.getTexCoords().addAll(new float[]{0.0f, 0.0f});

        // Add faces to the TriangleMesh
        for (var face : mesh.faces()) {
            triangleMesh.getFaces().addAll(face.get(0), 0, face.get(1), 0, face.get(2), 0);
            if (face.size() == 5) { // if the face is a quadrilateral
                triangleMesh.getFaces().addAll(face.get(2), 0, face.get(3), 0, face.get(0), 0);
            } else {
                throw new AssertionError("Face is not a quadrilateral");
            }
        }

        // Create a MeshView to display the TriangleMesh
        MeshView meshView = new MeshView(triangleMesh);

        // Set the MeshView's material to a PhongMaterial with the color of the face
        for (var face : mesh.faces()) {
            PhongMaterial material = new PhongMaterial(Color.rgb((face.get(4) >> 16) & 0xFF, (face.get(4) >> 8) & 0xFF, face.get(4) & 0xFF));
            meshView.setMaterial(material);
        }
        PhongMaterial blueMaterial = new PhongMaterial();
        blueMaterial.setDiffuseColor(Color.BLUE);
        meshView.setMaterial(blueMaterial);

        return meshView;
    }

    // serialize3DContent serializes the 3D content to FXML
    public static String create3DContentAsFXML(Output o) {
    StringBuilder fxml = new StringBuilder();
    var volume = o.volume();
    var dims = o.dims();
    var pos = new int[3]; // x, y, z
    for (pos[2] = 0; pos[2] < dims[2]; pos[2]++) {
        for (pos[1] = 0; pos[1] < dims[1]; pos[1]++) {
            for (pos[0] = 0; pos[0] < dims[0]; pos[0]++) {
                var color = volume[pos[0] + dims[0] * (pos[1] + dims[1] * pos[2])];
                if (color != 0) {
                    fxml.append("<Box depth=\"1.0\" height=\"1.0\" width=\"1.0\" translateX=\"")
                        .append(pos[0])
                        .append("\" translateY=\"")
                        .append(pos[1])
                        .append("\" translateZ=\"")
                        .append(pos[2])
                        .append("\">\n")
                        .append("<material>\n")
                        .append("<PhongMaterial diffuseColor=\"#")
                        .append(String.format("%06X", (0xFFFFFF & color)))
                        .append("\"/>\n")
                        .append("</material>\n")
                        .append("</Box>\n");
                }
            }
        }
    }
    return fxml.toString();
}

    public static Group create3DContent(Output o) {
        var g = new Group();
        var volume = o.volume();
        var dims = o.dims();
        var pos = new int[3]; // x, y, z
        for (pos[2] = 0; pos[2] < dims[2]; pos[2]++) {
            for (pos[1] = 0; pos[1] < dims[1]; pos[1]++) {
                for (pos[0] = 0; pos[0] < dims[0]; pos[0]++) {
                    var color = volume[pos[0] + dims[0] * (pos[1] + dims[1] * pos[2])];
                    if (color != 0) {
                        var box = new Box(1, 1, 1);
                        box.setTranslateX(pos[0]);
                        box.setTranslateY(pos[1]);
                        box.setTranslateZ(pos[2]);
                        box.setMaterial(new PhongMaterial(Color.rgb((color >> 16) & 0xFF, (color >> 8) & 0xFF, color & 0xFF)));
                        g.getChildren().add(box);
                    }
                }
            }
        }

        return g;
    }

    public static void main(String[] args) {
        launch();
    }
}
